.\" @(#)runcutest v1.0 01/2013;
.TH runcutest 1 "23 Jan 2013"
.SH NAME
runcutest \- CUTEst interface to solvers.
.SH SYNOPSIS
\fBruncutest\fP --package \fIpack\fP [\-\-architecture \fIarch\fP]  [\-\-single] [\-\-help] [\-\-keep] [\-\-rebuild] [\-\-output \fI0|1\fP] [\-\-limit \fIsecs\fP] [\-\-cfortran] [\-\-debug] [\-\-uncons] [\-L\fIpath/to/lib\fP] [\-\-blas \fIkeyword\fP] [\-\-lapack \fIkeyword\fP] [\-\-decode \fIproblem[.SIF]\fP]
.SH DESCRIPTION
\fBruncutest\fP is the CUTEst interface to solvers. It replaces its 
predecessor CUTEr's combination of \fBrunpackage\fP, \fIpkg\fP and
\fBsd\fP\fIpkg\fP. The command accepts options in short or long form. 
Any option that is not directly recognized is passed unchanged to the 
SIF decoder, sifdecoder(1).

There are still \fIpkg\fP scripts for each solver but they are reduced 
to a minimum, setting a few environment variables.

\fBruncutest\fP reads these environment variables and then compiles and
links all the relevant source files and libraries to form an executable
of the package \fIpackage\fP running on problem \fIproblem\fP.

The user has the opportunity to run commands before and after the run if
need be. \fBruncutest\fP executes the script \fIpackage\fP_pre, if it
exists, before the run. Similarly, it executes the script
\fIpackage\fP_post, if it exists, after completion of the run.

.LP 
.SH runcutest Options
You can start runcutest with the following options. An option can be used either in short or long form.
.TP 5
.B \-p, \-\-package \fIpack\fP
Specifies the package or solver, \fIpack\fP
to use. See the section \fBCurrently Supported Packages\fP below.
This is the only mandatory option.
.TP
.B \-A, \-\-architecture \fIarch\fP
Run the decoder using the architecture \fIarch\fP; the architeture 
is a string of the form machine.system.compiler as specified in the
directory $CUTEST/versions. If no \-A option is given, a valid
architecture given by the environment variable $MYARCH will be
used, but if $MYARCH is invalid or empty the decoder will terminate.
.TP
.B \-sp, \-\-single
Run \fIpackage\fP in single-precision mode if available. Double
precision is the default.
.TP
.B \-h, \-\-help
Print a short help message with the available command-line options.
.TP
.B \-k, \-\-keep
Keep the generated executable after use. May be useful when solving a
particular problem with the same solver with different
parameters. Deleting the executable after use is the default.
.TP
.B \-r, \-\-rebuild
Force recompilation of the test problem. Default is to reuse object files.
.TP
.B \-o, \-\-output \fI0|1\fP
Regulates the output level. Verbose mode is \fB-o\fP 1, silent mode is
\fB-o\fP 0. Silent mode is the default.
.TP
.B \-l, \-\-limit \fIsecs\fP
Sets a limit of \fIsecs\fP second on the \fIpackage\fP runtime. 
Unlimited cputime is the default.
.TP
.B \-c, \-\-cfortran
Causes specialized compiler options to be used to specify that the main
subroutine of \fIpackage\fP is written in C. This is necessary with some
compilers, such as the Intel Fortran Compiler.
.TP
.B \-L\fIpath/to/lib\fP
This option is passed directly to the linker and causes the path
\fIpath/to/lib\fP to be searched for libraries. Useful to specify custom
BLAS and LAPACK libraries.
.TP
.B \-b, \-\-blas \fIkeyword\fP
Overrides usage of the default \fIlinpack\fP library packaged with
CUTEst. Instead, use the BLAS library specified by \fIkeyword\fP. The
keyword \fIkeyword\fP has one of two forms. The first, \fI-lmyblas\fP
causes the linker to search for BLAS subprograms in the libmyblas.a
library. The second, \fInone\fP, causes the linker to skip inclusion of
any external BLAS. Use the first option if an optimized BLAS library is
available on the host system, e.g., the ATLAS BLAS. The second option is
useful for packages which already include the necessary BLAS
subprograms. Use of \fInone\fP may be useful if \fIpackage\fP already
includes the BLAS subroutines on which it relies.
.TP
.B \-K, \-\-lapack \fIkeyword\fP
Overrides usage of the default \fIlinpack\fP library packaged with
CUTEst. Instead, use the LAPACK library specified by \fIkeyword\fP. The
keyword \fIkeyword\fP has one of two forms. The first, \fI-lmylapack\fP
causes the linker to search for LAPACK subroutines in the libmylapack.a
library. The second, \fInone\fP, causes the linker to skip inclusion of
any external LAPACK. Use the first option if an optimized LAPACK library
is available on the host system. The second option is useful for
packages which already include the necessary LAPACK subprograms. Use of
\fInone\fP may be useful if \fIpackage\fP already includes the LAPACK
subroutines on which it relies.
.TP
.B \-D, \-\-decode \fIproblem[.SIF]\fP
Applies the SIF decoder to the problem \fIproblem.SIF\fP to produce the
OUTSDIF.d file and the problem-dependant Fortan subroutines. If this
flag is not specified, \fBruncutest\fP assumes that the problem has been
decoded prior to the call.
.TP
.B \-u, \-\-uncons
When \fIpackage\fP is \fBmx\fP, the Matlab interface, this option
specifies that the problem is unconstrained. This causes the appropriate
MEX interface to be compiled and linked. The default is to link with the
constrained tools.
.TP
.B "additional command-line options"
Any command-line option not documented in this manual page and/or in the
help message of \fBruncutest\fP is passed unchanged to the SIF
decoder. See the \fBsifdecode\fP manual page for more information.

.SH CURRENTLY SUPPORTED PACKAGES
There are currently interfaces to the following packages:
.TP 5
.B \fIcg_descent\fP
See W. W. Hager and H. Zhang, 
\fIAlgorithm 851: CG_DESCENT, A conjugate gradient method with guaranteed 
descent\fP, ACM Transactions on Mathematical Software, 32 (2006), 113-137. 

.TP
.B \fIcgplus\fP
The CG+ package is a nonlinear conjugate-gradient algorithm
designed for unconstrained minimization by G. Liu, Jorge 
Nocedal and Richard Waltz (Northwestern U.).

.TP
.B \fIcobyla\fP
See 
M.J.D. Powell,
\fIA direct search optimization method that models the objective and
constraint functions by linear interpolation\fP,
In Advances in optimization and numerical analysis, Proceedings
of the Sixth workshop on Optimization and Numerical Analysis, Oaxaca,
Mexico, volume 275 of Mathematics and its Applications, pp 51--67.
Kluwer Academic Publishers, 1994.


.TP
.B \fIderchk\fP

.TP
.B \fIdfo\fP
See A. R. Conn, K. Scheinberg and Ph.L. Toint, 
\fIOn the convergence of derivative-free methods for unconstrained 
optimization\fP,
Approximation Theory and Optimization: Tributes to M. J. D. Powell , 
Eds. A. Iserles and M. Buhmann, (1997), pp. 83-108, Cambridge University Press. 

.TP
.B \fIfiltersqp\fP
FilterSQP is a filter-based SQP method for large-scale nonlinear programming
by Roger Fletcher and Sven Leyffer from the University of Dundee.

.TP
.B \fIgen\fP

.TP
.B \fIhrb\fP

.TP
.B \fIipopt\fP

.TP
.B \fIknitro\fP

.TP
.B \fIla04\fP

.TP
.B \fIlbfgs\fP

.TP
.B \fIlbfgsb\fP

.TP
.B \fIloqo\fP

.TP
.B \fImatlab\fP

.TP
.B \fIminos\fP

.TP
.B \fInitsol\fP

.TP
.B \fInpsol\fP

.TP
.B \fIpds\fP

.TP
.B \fIpraxis\fP

.TP
.B \fIsnopt\fP

.TP
.B \fIstats\fP

.TP
.B \fIstenmin\fP

.TP
.B \fItao\fP

.TP
.B \fItenmin\fP

.TP
.B \fItron\fP

.TP
.B \fIuncmin\fP

.TP
.B \fIvf13\fP

.LP 


Interfaces to the obsolete packages 
\fIhsl_ve12\fP, \fIosl\fP, \fIva15\fP, \fIve09\fP and \fIve14\fP 
supported by CUTEr have been withdrawn.

The packages 
\fIderchk\fP,  \fIgen\fP, \fIhrb\fP and \fIstats\fP are supplied
as part of the CUTEst distribution and should work "as is". 
Anyone wishing to use one of remaining packages will need to download 
and install it first. See the
README in the relevant subdirectory of $CUTEST/src for further
instructions. 

A file with each of the supported packages' names may be found
in the directory $CUTEST/packages/ and indicates default 
locations for the package's binary and options files.
These files may be edited if necessary, or copied into 
$CUTEST/packages/(arrchitecture)/(precision)/
to allow for architecture or precision
specfic versions; \fBruncutest\fP will check the architecture/precision
specfic directory before using the default version.
.SH ENVIRONMENT 
.TP
.SB CUTEST
 Directory containing CUTEst.
.TP
.SB SIFDECODE
Directory containing SIFDecode.
.TP
.SB MYARCH 
 The default architecture.
.TP
.SB MASTSIF
A pointer to the directory containing the CUTEst problems
collection. If this variable is not set, the current directory is
searched for \fIproblem.SIF\fP. If it is set, the current directory is
searched first, and if \fIproblem.SIF\fP is not found there, $MASTSIF
is searched.
.SH AUTHORS
I. Bongartz, A.R. Conn, N.I.M. Gould, D. Orban and Ph.L. Toint
.SH "SEE ALSO"
\fICUTEr (and SifDec): A Constrained and Unconstrained Testing
Environment, revisited\fP,
   N.I.M. Gould, D. Orban and Ph.L. Toint,
   ACM TOMS, \fB29\fP:4, pp.373-394, 2003.

\fICUTE: Constrained and Unconstrained Testing Environment\fP,
   I. Bongartz, A.R. Conn, N.I.M. Gould and Ph.L. Toint, 
   TOMS, \fB21\fP:1, pp.123-160, 1995.

sifdecoder(1), 
cob(1), fil(1), gen(1), hrb(1), knit(1), lmb(1), mns(1), nps(1),
prx(1), sdcob(1), sdfil(1), sdgen(1), sdhrb(1), sdknit(1),
sdlmb(1), sdmns(1), sdnps(1), sdprx(1), sdsnp(1), sdten(1),
sdunc(1), sdvf13(1),
snp(1), ten(1), unc(1), vf13(1).
